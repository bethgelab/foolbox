[flake8]
ignore = E203, E266, E501, W503
max-line-length = 80
max-complexity = 18
select = B,C,E,F,W,T4,B9

[mypy]
python_version = 3.6
warn_unused_ignores = True
warn_unused_configs = True
warn_return_any = True
warn_redundant_casts = True
warn_unreachable = True
ignore_missing_imports = False
disallow_any_unimported = True
namespace_packages = True
disallow_untyped_calls = True
no_implicit_optional = True
disallow_untyped_defs = True

[mypy-numpy]
ignore_missing_imports = True

[mypy-tensorflow]
ignore_missing_imports = True

[mypy-tensorboardX]
ignore_missing_imports = True

[mypy-jax.*]
ignore_missing_imports = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-pytest]
ignore_missing_imports = True

[mypy-torchvision.*]
ignore_missing_imports = True

[mypy-PIL.*]
ignore_missing_imports = True

[mypy-git.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-responses.*]
ignore_missing_imports = True

[mypy-numba]
ignore_missing_imports = True

[tool:pytest]
addopts =
    --verbose
    --cov=foolbox
    --cov-report term-missing
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # produced by TensorFlow:
    ignore:.*can't resolve package from __spec__ or __package__.*:ImportWarning

[coverage:run]
omit =
    tests/*

[coverage:report]
exclude_lines =
    # see: http://coverage.readthedocs.io/en/latest/config.html

    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    @abstractmethod
    @overload
    TYPE_CHECKING
    raise AssertionError
    raise NotImplementedError
    @jitclass
